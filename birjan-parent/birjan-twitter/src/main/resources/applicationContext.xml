<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:security="http://www.springframework.org/schema/security"
	
	xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
            ">


	<context:component-scan base-package="com.mpx.birjan" />

	<tx:annotation-driven proxy-target-class="true"/>
	
	<security:global-method-security secured-annotations="enabled" />
	
	<task:annotation-driven executor="taskExecutor" scheduler="taskScheduler" />
	<task:executor id="taskExecutor" pool-size="5-20" queue-capacity="50" />
	<task:scheduler id="taskScheduler" pool-size="10"/>
	
	
	
	<!-- ========= CONFIGUTATION ============= -->
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/build_dev_mysql.properties" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:persistence.xml" />
		<property name="persistenceUnitName" value="${entityManagerFactory.persistenceUnitName}" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>



	<!-- ========= AUTH ============= -->

	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
				<property name="userDetailsService" ref="userDetailsService" />
				<property name="userCache" ref="userCache" />
			</bean>
		</property>
	</bean>

	<bean id="userDetailsService"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<property name="dataSource" ref="dataSource" />
		<property name="userCache" ref="userCache"></property>
	</bean>

	<bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<property name="cache">
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheManager">
					<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
						<property name="configLocation" value="classpath:/ehcache.xml" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	
	
	<!-- ========== TWITTER ============= -->
	
	<!--bean id="twitterManager" class="com.mpx.birjan.core.TwitterManager">
		<lookup-method name="getCreateCommand" bean="createCommand"/>
		<lookup-method name="getDeleteCommand" bean="deleteCommand"/>
		<lookup-method name="getShowCommand" bean="showCommand"/>
	</bean-->

	<bean id="twitterHandlerFactory" class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
     	<property name="targetBeanName" value="twitterHandler"/>
   </bean>
	
	<bean id="twitterFactory" class="twitter4j.TwitterFactory">
		<constructor-arg type="twitter4j.conf.Configuration" ref="configuration" />
	</bean>
	
	<bean id="twitterStream" class="twitter4j.TwitterStream" factory-bean="twitterStreamFactory" factory-method="getInstance" />
	
	<bean id="twitterStreamFactory" class="twitter4j.TwitterStreamFactory">
		<constructor-arg type="twitter4j.conf.Configuration" ref="configuration"/>
	</bean>
	
	<bean id="configuration" class="twitter4j.conf.Configuration" factory-bean="configurationBuilder" factory-method="build" />
	
	<bean id="configurationBuilder" class="twitter4j.conf.ConfigurationBuilder" scope="prototype">
		<property name="debugEnabled" value="true" />
		<property name="OAuthConsumerKey" value="piozU7GCQ2sSgBkvyNs6pw"/>
		<property name="OAuthConsumerSecret" value="iOqu91UxDEvQwC2fWSLeJjCJUynYKYx0MAO9uQNqQ"/>
		<property name="OAuthAccessToken" value="1491434672-NOJCS5heHjAX563VhMZy3ENA7AKvpzGOZmtbnea"/>
		<property name="OAuthAccessTokenSecret" value="3LVYeMxSTrUwp35TgySczMFenXmJk5BoZl3lsH34JPU"/>
	</bean>
	
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="csobrero@gmail.com" />
		<property name="password" value="redhat70" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

</beans>
