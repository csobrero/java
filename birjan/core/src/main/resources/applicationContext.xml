<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!--context:component-scan base-package="com.javacodegeeks.gwtspring"/>

    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>

    <task:executor id="myExecutor" pool-size="5"/>

    <task:scheduler id="myScheduler" pool-size="10"/-->
    
    <context:component-scan base-package="com.mpx.birjan"/>

    <tx:annotation-driven/>

    <!--bean class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean" id="entityManagerFactory">
        <property name="persistenceUnitName" value="MyPersistenceUnit"/>
    </bean-->
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:persistence2.xml" />
        <property name="persistenceUnitName" value="PUnit" />             
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:file:data/birjan"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    <!-- AUTH -->

	<!--bean id="springSecurityHandler"
		class="SpringPlainTextPasswordValidationCallbackHandler">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean-->

	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<bean
				class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
				<property name="userDetailsService" ref="userDetailsService" />
			</bean>
		</property>
	</bean>

	<bean id="userDetailsService"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- AUTH -->
	<!--bean class="org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter">
		<property name="baseAddress" value="http://localhost:8081/" />
	</bean-->

	<bean
		class="org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter">
		<property name="server" ref="myServer" />
	</bean>

	<bean id="myServer" class="com.sun.net.httpserver.HttpsServer"
		factory-method="create" init-method="start" autowire="byName">
		<constructor-arg ref="socket" />
		<constructor-arg value="0" />
	</bean>

	<bean id="socket" class="java.net.InetSocketAddress">
		<constructor-arg value="localhost" />
		<constructor-arg value="8081" />
	</bean>

	<bean id="httpsConfigurator" class="com.sun.net.httpserver.HttpsConfigurator">
		<constructor-arg ref="sslContext" />
	</bean>

	<bean id="sslContext" class="com.mpx.birjan.core.ConfiguredSSLContext"
		factory-method="getSSLContext">
		<constructor-arg value="C:\development\tools\jdk1.6.0_29\keyTools\keys\birjan.keystore" />
		<constructor-arg value="1Qaz2wsx" />
		<constructor-arg value="1Qaz2wsx" />
	</bean>

</beans>
